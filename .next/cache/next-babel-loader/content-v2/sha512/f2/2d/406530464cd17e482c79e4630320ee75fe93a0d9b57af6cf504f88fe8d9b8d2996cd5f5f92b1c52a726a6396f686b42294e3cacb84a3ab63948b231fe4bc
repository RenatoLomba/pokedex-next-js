{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\n\nconst Pokemon = ({\n  pokemon\n}) => {\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [\"Id: ...\", /*#__PURE__*/_jsx(\"img\", {\n      src: pokemon.sprites.front_default,\n      alt: \"Imagem do Pokemon\"\n    })]\n  });\n};\n\nexport default Pokemon;\nexport async function getStaticProps({\n  params\n}) {\n  let pokemon = {};\n\n  try {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${params.id}`);\n\n    if (response.ok) {\n      const json = await response.json();\n      pokemon = json;\n    } else {\n      throw new Error('Resposta da consulta inválida');\n    }\n  } catch (error) {\n    alert(error.message);\n  }\n\n  return {\n    props: {\n      pokemon\n    }\n  };\n}\nexport async function getStaticPaths() {\n  let pokemons = [];\n\n  try {\n    const response = await fetch('https://pokeapi.co/api/v2/pokedex/2/');\n\n    if (response.ok) {\n      const json = await response.json();\n      pokemons = json.pokemon_entries;\n    } else {\n      throw new Error('Resposta da consulta inválida');\n    }\n  } catch (error) {\n    alert(error.message);\n  }\n\n  const pokeParams = pokemons.map((pokemon, key) => {\n    return {\n      params: {\n        id: String(pokemon.entry_number)\n      }\n    };\n  });\n  console.log(pokeParams);\n  return {\n    paths: pokeParams,\n    fallback: false\n  };\n}","map":null,"metadata":{},"sourceType":"module"}