{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adm\\\\Desktop\\\\pokedex\\\\pages\\\\pokemon\\\\[id].js\";\nimport React from 'react';\n\nconst Pokemon = ({\n  pokemon\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Id: ...\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pokemon.sprites.front_default,\n      alt: \"Imagem do Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Pokemon;\nexport async function getStaticProps({\n  params\n}) {\n  let pokemon = {};\n\n  try {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${params.id}`);\n\n    if (response.ok) {\n      const json = await response.json();\n      pokemon = json;\n    } else {\n      throw new Error('Resposta da consulta inv치lida');\n    }\n  } catch (error) {\n    alert(error.message);\n  }\n\n  return {\n    props: {\n      pokemon\n    }\n  };\n}\nexport async function getStaticPaths() {\n  let pokemons = [];\n\n  try {\n    const response = await fetch('https://pokeapi.co/api/v2/pokedex/2/');\n\n    if (response.ok) {\n      const json = await response.json();\n      pokemons = json.pokemon_entries;\n    } else {\n      throw new Error('Resposta da consulta inv치lida');\n    }\n  } catch (error) {\n    alert(error.message);\n  }\n\n  pokemons.map((pokemon, key) => {\n    return {\n      params: {\n        id: pokemon.entry_number\n      }\n    };\n  });\n  console.log(pokemons);\n  return {\n    paths: [{\n      params: {\n        id: '1'\n      }\n    }, {\n      params: {\n        id: '2'\n      }\n    }, {\n      params: {\n        id: '3'\n      }\n    }],\n    fallback: false\n  };\n}","map":{"version":3,"sources":["C:/Users/adm/Desktop/pokedex/pages/pokemon/[id].js"],"names":["React","Pokemon","pokemon","sprites","front_default","getStaticProps","params","response","fetch","id","ok","json","Error","error","alert","message","props","getStaticPaths","pokemons","pokemon_entries","map","key","entry_number","console","log","paths","fallback"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC7B,sBACI;AAAA,uCAEI;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC,OAAR,CAAgBC,aAA1B;AAAyC,MAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;AAQA,eAAeH,OAAf;AAEA,OAAO,eAAeI,cAAf,CAA8B;AAACC,EAAAA;AAAD,CAA9B,EAAwC;AAC3C,MAAIJ,OAAO,GAAG,EAAd;;AACA,MAAI;AACA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCF,MAAM,CAACG,EAAG,EAAhD,CAA5B;;AACA,QAAIF,QAAQ,CAACG,EAAb,EAAiB;AACb,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;AACAT,MAAAA,OAAO,GAAGS,IAAV;AACH,KAHD,MAGO;AACH,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACH;AACJ,GARD,CAQE,OAAOC,KAAP,EAAc;AACZC,IAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH;;AACD,SAAO;AACHC,IAAAA,KAAK,EAAE;AAAEd,MAAAA;AAAF;AADJ,GAAP;AAGH;AAED,OAAO,eAAee,cAAf,GAAgC;AACnC,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAI;AACA,UAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;;AACA,QAAID,QAAQ,CAACG,EAAb,EAAiB;AACb,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;AACAO,MAAAA,QAAQ,GAAGP,IAAI,CAACQ,eAAhB;AACH,KAHD,MAGO;AACH,YAAM,IAAIP,KAAJ,CAAU,+BAAV,CAAN;AACH;AACJ,GARD,CAQE,OAAOC,KAAP,EAAc;AACZC,IAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH;;AACDG,EAAAA,QAAQ,CAACE,GAAT,CAAa,CAAClB,OAAD,EAAUmB,GAAV,KAAkB;AAC3B,WAAO;AACHf,MAAAA,MAAM,EAAE;AACJG,QAAAA,EAAE,EAAEP,OAAO,CAACoB;AADR;AADL,KAAP;AAKH,GAND;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,SAAO;AACHO,IAAAA,KAAK,EAAE,CACH;AACInB,MAAAA,MAAM,EAAE;AACJG,QAAAA,EAAE,EAAE;AADA;AADZ,KADG,EAMH;AACIH,MAAAA,MAAM,EAAE;AACJG,QAAAA,EAAE,EAAE;AADA;AADZ,KANG,EAWH;AACIH,MAAAA,MAAM,EAAE;AACJG,QAAAA,EAAE,EAAE;AADA;AADZ,KAXG,CADJ;AAkBHiB,IAAAA,QAAQ,EAAE;AAlBP,GAAP;AAoBH","sourcesContent":["import React from 'react';\r\n\r\nconst Pokemon = ({ pokemon }) => {\r\n    return (\r\n        <div>\r\n            Id: ...\r\n            <img src={pokemon.sprites.front_default} alt=\"Imagem do Pokemon\" />\r\n        </div>\r\n    )\r\n}\r\nexport default Pokemon;\r\n\r\nexport async function getStaticProps({params}) {\r\n    let pokemon = {};\r\n    try {\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${params.id}`);\r\n        if (response.ok) {\r\n            const json = await response.json();\r\n            pokemon = json;\r\n        } else {\r\n            throw new Error('Resposta da consulta inv치lida');\r\n        }\r\n    } catch (error) {\r\n        alert(error.message);\r\n    }\r\n    return {\r\n        props: { pokemon }\r\n    }\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    let pokemons = [];\r\n    try {\r\n        const response = await fetch('https://pokeapi.co/api/v2/pokedex/2/');\r\n        if (response.ok) {\r\n            const json = await response.json();\r\n            pokemons = json.pokemon_entries\r\n        } else {\r\n            throw new Error('Resposta da consulta inv치lida');\r\n        }\r\n    } catch (error) {\r\n        alert(error.message);\r\n    }\r\n    pokemons.map((pokemon, key) => {\r\n        return {\r\n            params: {\r\n                id: pokemon.entry_number\r\n            }\r\n        }\r\n    });\r\n    console.log(pokemons);\r\n\r\n    return {\r\n        paths: [\r\n            {\r\n                params: {\r\n                    id: '1'\r\n                }\r\n            },\r\n            {\r\n                params: {\r\n                    id: '2'\r\n                }\r\n            },\r\n            {\r\n                params: {\r\n                    id: '3'\r\n                }\r\n            },\r\n        ],\r\n        fallback: false\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}